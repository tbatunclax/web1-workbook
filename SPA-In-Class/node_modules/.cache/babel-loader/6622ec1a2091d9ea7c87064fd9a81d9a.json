{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/uclax/uclax-projects/Web1-Workbook/SPA-In-Class/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _objectSpread from\"/Users/uclax/uclax-projects/Web1-Workbook/SPA-In-Class/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/uclax/uclax-projects/Web1-Workbook/SPA-In-Class/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    \\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState}from'react';import styled from'styled-components';/* Scripts ---------- */import API from'../../../common/axios.js';/* Components -------- */import FormGroup from'../../../common/Forms/FormGroup.jsx';import Button from'../../../common/Forms/Button.jsx';var formFields={nameField:{id:'userName',label:'Name',inputType:'text',value:'',validate:{required:true,valid:true,message:''}},emailField:{id:'userPassword',label:'Password',inputType:'password',value:'',validate:{required:true,valid:true,message:''}}/*messageField: {\n        id: 'userMessage',\n        label: 'Message',\n        inputType: 'textarea',\n        value: '',\n        validate: {\n            required: false,\n            valid: true,\n            message: '',\n        }\n    },*/};var LoginForm=function LoginForm(){var _useState=useState(formFields.nameField),_useState2=_slicedToArray(_useState,2),userName=_useState2[0],userNameUpdate=_useState2[1];var _useState3=useState(formFields.emailField),_useState4=_slicedToArray(_useState3,2),userPassword=_useState4[0],userPasswordUpdate=_useState4[1];//const [userMessage, userMessageUpdate] = useState(formFields.messageField);\nvar handleChange=function handleChange(event,formField){// console.log(event.target.value, formField);\n//grandpa\n//update input\nvar newField=_objectSpread(_objectSpread({},formField),{},{value:event.target.value});//if() condition\nif(newField.validate.required===true){console.log('Validating: ',newField.label);if(newField.value.length<7){newField.validate.valid=false;newField.validate.message=\"You forgot to fill out the \".concat(newField.label,\" field\");}else{newField.validate.valid=true;newField.validate.message=\"\";}}if(formField.id==='userName'){userNameUpdate(newField);}if(formField.id==='userPassword'){userPasswordUpdate(newField);}/*if (formField.id === 'userMessage'){\n            userMessageUpdate(newField);\n        }*/};//method to submit\nvar handleFormSubmit=function handleFormSubmit(event){event.preventDefault();console.log('Captured Form Submit, we will take it from here.');if(userName.validate.valid===true&&userPassword.validate.valid===true){console.log('Valid Submitting form.');// .. AJAX goes here: AKA AXIOS\nvar postData={userName:userName,userPassword:userPassword//userMessage: userMessage,\n};API.post('/sendPSWD',postData).then(function(result){console.log('result',result);});}};return/*#__PURE__*/React.createElement(ContactFormStyled,{className:\"ContactForm\"},/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleFormSubmit},/*#__PURE__*/React.createElement(FormGroup,{formField:userName,onChange:handleChange}),/*#__PURE__*/React.createElement(FormGroup,{formField:userPassword,onChange:handleChange}),/*#__PURE__*/React.createElement(Button,{type:\"submit\"},\"Login\")));};export default LoginForm;var ContactFormStyled=styled.div(_templateObject());","map":{"version":3,"sources":["/Users/uclax/uclax-projects/Web1-Workbook/SPA-In-Class/src/App/Pages/Login/LoginForm.jsx"],"names":["React","useState","styled","API","FormGroup","Button","formFields","nameField","id","label","inputType","value","validate","required","valid","message","emailField","LoginForm","userName","userNameUpdate","userPassword","userPasswordUpdate","handleChange","event","formField","newField","target","console","log","length","handleFormSubmit","preventDefault","postData","post","then","result","ContactFormStyled","div"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\n/* Scripts ---------- */\nimport API from '../../../common/axios.js';\n\n/* Components -------- */\nimport FormGroup from '../../../common/Forms/FormGroup.jsx';\nimport Button from '../../../common/Forms/Button.jsx'\n\nconst formFields = {\n    nameField: {\n        id: 'userName',\n        label: 'Name',\n        inputType: 'text',\n        value: '',\n        validate: {\n            required: true,\n            valid: true,\n            message: '',\n        }\n    },\n    emailField: {\n        id: 'userPassword',\n        label: 'Password',\n        inputType: 'password',\n        value: '',\n        validate: {\n            required: true,\n            valid: true,\n            message: '',\n        }\n    },\n    /*messageField: {\n        id: 'userMessage',\n        label: 'Message',\n        inputType: 'textarea',\n        value: '',\n        validate: {\n            required: false,\n            valid: true,\n            message: '',\n        }\n    },*/\n}\n\n\n\nconst LoginForm = () => {\n\n    const [userName, userNameUpdate] = useState(formFields.nameField);\n    const [userPassword, userPasswordUpdate] = useState(formFields.emailField);\n    //const [userMessage, userMessageUpdate] = useState(formFields.messageField);\n    \n    const handleChange = (event, formField) => {\n        // console.log(event.target.value, formField);\n//grandpa\n        //update input\n        const newField = {\n            // clone of the formField (spread operator)\n            ...formField,\n            value: event.target.value,\n        }\n        //if() condition\n        if(newField.validate.required === true){\n            console.log('Validating: ', newField.label);\n\n            if(newField.value.length < 7){\n                newField.validate.valid =false;\n                newField.validate.message = `You forgot to fill out the ${newField.label} field`;\n\n            }else {\n                newField.validate.valid =true;\n                newField.validate.message = ``;\n            }\n\n        }\n\n\n\n        if(formField.id === 'userName') {\n            userNameUpdate(newField);\n        }\n\n        if (formField.id === 'userPassword'){\n            userPasswordUpdate(newField);\n        }\n        /*if (formField.id === 'userMessage'){\n            userMessageUpdate(newField);\n        }*/\n    }\n\n    //method to submit\n\n    const handleFormSubmit = (event) => {\n        event.preventDefault();\n        console.log('Captured Form Submit, we will take it from here.');\n\n        if( userName.validate.valid === true && userPassword.validate.valid === true ){\n            console.log('Valid Submitting form.');\n\n            // .. AJAX goes here: AKA AXIOS\n\n            const postData = {\n                userName: userName,\n                userPassword: userPassword,\n                //userMessage: userMessage,\n            }\n\n\n            API.post('/sendPSWD', postData).then((result)=>{\n                    console.log('result', result);\n            });\n        }\n    }\n\n    return (\n        <ContactFormStyled className='ContactForm'>\n            <form onSubmit={ handleFormSubmit }>\n                <FormGroup \n                    formField = { userName } \n                    onChange={ handleChange }\n                />\n                <FormGroup \n                    formField = { userPassword } \n                    onChange={ handleChange }\n                />\n                \n                <Button type='submit'>Login</Button>\n            </form>\n        </ContactFormStyled>\n    );\n}\n\nexport default LoginForm;\n\nconst ContactFormStyled = styled.div`\n    \n`;"]},"metadata":{},"sourceType":"module"}