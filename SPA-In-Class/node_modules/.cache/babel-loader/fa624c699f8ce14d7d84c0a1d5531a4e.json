{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/uclax/uclax-projects/Web1-Workbook/SPA-In-Class/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _objectSpread from \"/Users/uclax/uclax-projects/Web1-Workbook/SPA-In-Class/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/uclax/uclax-projects/Web1-Workbook/SPA-In-Class/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/uclax/uclax-projects/Web1-Workbook/SPA-In-Class/src/App/Pages/Contact/ContactForm.jsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    \\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n/* Components -------- */\n\nimport FormGroup from '../../../common/Forms/FormGroup.jsx';\nimport Button from '../../../common/Forms/Button.jsx';\nvar formFields = {\n  nameField: {\n    id: 'userName',\n    label: 'Name',\n    inputType: 'text',\n    value: '',\n    validate: {\n      required: true,\n      valid: true,\n      message: ''\n    }\n  },\n  emailField: {\n    id: 'userEmail',\n    label: 'Email',\n    inputType: 'email',\n    value: '',\n    validate: {\n      required: true,\n      valid: true,\n      message: ''\n    }\n  },\n  messageField: {\n    id: 'userMessage',\n    label: 'Message',\n    inputType: 'textarea',\n    value: '',\n    validate: {\n      required: false,\n      valid: true,\n      message: ''\n    }\n  }\n};\n\nvar ContactForm = function ContactForm() {\n  var _useState = useState(formFields.nameField),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      userNameUpdate = _useState2[1];\n\n  var _useState3 = useState(formFields.emailField),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userEmail = _useState4[0],\n      userEmailUpdate = _useState4[1];\n\n  var _useState5 = useState(formFields.messageField),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userMessage = _useState6[0],\n      userMessageUpdate = _useState6[1];\n\n  var handleChange = function handleChange(event, formField) {\n    console.log(event.target.value, formField); //grandpa\n    //update input\n\n    var newField = _objectSpread(_objectSpread({}, formField), {}, {\n      value: event.target.value\n    }); //if() condition\n\n\n    if (newField.validate.required === true) {\n      console.log('Validating: ', newField.label);\n\n      if (newField.value.length < 4) {\n        newField.validate.valid = false;\n        newField.validate.message = \"You forgot to fill out the \".concat(newField.label, \" field\");\n      } else {\n        newField.validate.valid = false;\n        newField.validate.message = \"\";\n      }\n    }\n\n    if (formField.id === 'userName') {\n      userNameUpdate(newField);\n    }\n\n    if (formField.id === 'userEmail') {\n      userEmailUpdate(newField);\n    }\n\n    if (formField.id === 'userMessage') {\n      userMessageUpdate(newField);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ContactFormStyled, {\n    className: \"ContactForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    formField: userName,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormGroup, {\n    formField: userEmail,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormGroup, {\n    formField: userMessage,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"Send Email\")));\n};\n\nexport default ContactForm;\nvar ContactFormStyled = styled.div(_templateObject());","map":{"version":3,"sources":["/Users/uclax/uclax-projects/Web1-Workbook/SPA-In-Class/src/App/Pages/Contact/ContactForm.jsx"],"names":["React","useState","styled","FormGroup","Button","formFields","nameField","id","label","inputType","value","validate","required","valid","message","emailField","messageField","ContactForm","userName","userNameUpdate","userEmail","userEmailUpdate","userMessage","userMessageUpdate","handleChange","event","formField","console","log","target","newField","length","ContactFormStyled","div"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\n/* Components -------- */\nimport FormGroup from '../../../common/Forms/FormGroup.jsx';\nimport Button from '../../../common/Forms/Button.jsx'\n\nconst formFields = {\n    nameField: {\n        id: 'userName',\n        label: 'Name',\n        inputType: 'text',\n        value: '',\n        validate: {\n            required: true,\n            valid: true,\n            message: '',\n        }\n    },\n    emailField: {\n        id: 'userEmail',\n        label: 'Email',\n        inputType: 'email',\n        value: '',\n        validate: {\n            required: true,\n            valid: true,\n            message: '',\n        }\n    },\n    messageField: {\n        id: 'userMessage',\n        label: 'Message',\n        inputType: 'textarea',\n        value: '',\n        validate: {\n            required: false,\n            valid: true,\n            message: '',\n        }\n    },\n}\n\n\n\nconst ContactForm = () => {\n\n    const [userName, userNameUpdate] = useState(formFields.nameField);\n    const [userEmail, userEmailUpdate] = useState(formFields.emailField);\n    const [userMessage, userMessageUpdate] = useState(formFields.messageField);\n    \n    const handleChange = (event, formField) => {\n        console.log(event.target.value, formField);\n//grandpa\n        //update input\n        const newField = {\n            // clone of the formField\n            ...formField,\n            value: event.target.value,\n        }\n        //if() condition\n        if(newField.validate.required === true){\n            console.log('Validating: ', newField.label);\n\n            if(newField.value.length < 4){\n                newField.validate.valid =false;\n                newField.validate.message = `You forgot to fill out the ${newField.label} field`;\n\n            }else {\n                newField.validate.valid =false;\n                newField.validate.message = ``;\n            }\n\n        }\n\n\n\n        if(formField.id === 'userName') {\n            userNameUpdate(newField);\n        }\n\n        if (formField.id === 'userEmail'){\n            userEmailUpdate(newField);\n        }\n        if (formField.id === 'userMessage'){\n            userMessageUpdate(newField);\n        }\n    }\n\n    return (\n        <ContactFormStyled className='ContactForm'>\n            <form>\n                <FormGroup \n                    formField = { userName } \n                    onChange={handleChange }\n                />\n                <FormGroup \n                    formField = { userEmail } \n                    onChange={ handleChange }\n                />\n                <FormGroup \n                    formField = { userMessage }\n                    onChange={ handleChange }\n                />\n                <Button>Send Email</Button>\n            </form>\n        </ContactFormStyled>\n    );\n}\n\nexport default ContactForm;\n\nconst ContactFormStyled = styled.div`\n    \n`;"]},"metadata":{},"sourceType":"module"}