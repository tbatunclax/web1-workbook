{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/uclax/uclax-projects/Web1-Workbook/SPA-In-Class/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _objectSpread from \"/Users/uclax/uclax-projects/Web1-Workbook/SPA-In-Class/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/uclax/uclax-projects/Web1-Workbook/SPA-In-Class/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/uclax/uclax-projects/Web1-Workbook/SPA-In-Class/src/App/Pages/Login/LoginForm.jsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    \\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\n/* Scripts ---------- */\n\nimport API from '../../../common/axios.js';\n/* Components -------- */\n\nimport FormGroup from '../../../common/Forms/FormGroup.jsx';\nimport Button from '../../../common/Forms/Button.jsx';\nvar formFields = {\n  nameField: {\n    id: 'userName',\n    label: 'Name',\n    inputType: 'text',\n    value: '',\n    validate: {\n      required: true,\n      valid: true,\n      message: ''\n    }\n  },\n  emailField: {\n    id: 'userPassword',\n    label: 'Password',\n    inputType: 'password',\n    value: '',\n    validate: {\n      required: true,\n      valid: true,\n      message: ''\n    }\n  }\n  /*messageField: {\n      id: 'userMessage',\n      label: 'Message',\n      inputType: 'textarea',\n      value: '',\n      validate: {\n          required: false,\n          valid: true,\n          message: '',\n      }\n  },*/\n\n};\n\nvar LoginForm = function LoginForm() {\n  var _useState = useState(formFields.nameField),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      userNameUpdate = _useState2[1];\n\n  var _useState3 = useState(formFields.emailField),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userPassword = _useState4[0],\n      userPasswordUpdate = _useState4[1]; //const [userMessage, userMessageUpdate] = useState(formFields.messageField);\n\n\n  var handleChange = function handleChange(event, formField) {\n    // console.log(event.target.value, formField);\n    //grandpa\n    //update input\n    var newField = _objectSpread(_objectSpread({}, formField), {}, {\n      value: event.target.value\n    }); //if() condition\n\n\n    if (newField.validate.required === true) {\n      console.log('Validating: ', newField.label);\n\n      if (newField.value.length < 4) {\n        newField.validate.valid = false;\n        newField.validate.message = \"You forgot to fill out the \".concat(newField.label, \" field\");\n      } else {\n        newField.validate.valid = true;\n        newField.validate.message = \"\";\n      }\n    }\n\n    if (formField.id === 'userName') {\n      userNameUpdate(newField);\n    }\n\n    if (formField.id === 'userPassword') {\n      userPasswordUpdate(newField);\n    }\n    /*if (formField.id === 'userMessage'){\n        userMessageUpdate(newField);\n    }*/\n\n  }; //method to submit\n\n\n  var handleFormSubmit = function handleFormSubmit(event) {\n    event.preventDefault();\n    console.log('Captured Form Submit, we will take it from here.');\n\n    if (userName.validate.valid === true && userPassword.validate.valid === true) {\n      console.log('Valid Submitting form.'); // .. AJAX goes here: AKA AXIOS\n\n      var postData = {\n        userName: userName,\n        userPassword: userPassword //userMessage: userMessage,\n\n      };\n      API.post('/api/sendEmail', postData).then(function (result) {\n        console.log('result', result);\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ContactFormStyled, {\n    className: \"ContactForm\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleFormSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    formField: userName,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormGroup, {\n    formField: userPassword,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, \"Login\")));\n};\n\nexport default LoginForm;\nvar ContactFormStyled = styled.div(_templateObject());","map":{"version":3,"sources":["/Users/uclax/uclax-projects/Web1-Workbook/SPA-In-Class/src/App/Pages/Login/LoginForm.jsx"],"names":["React","useState","styled","API","FormGroup","Button","formFields","nameField","id","label","inputType","value","validate","required","valid","message","emailField","LoginForm","userName","userNameUpdate","userPassword","userPasswordUpdate","handleChange","event","formField","newField","target","console","log","length","handleFormSubmit","preventDefault","postData","post","then","result","ContactFormStyled","div"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA;;AACA,OAAOC,GAAP,MAAgB,0BAAhB;AAEA;;AACA,OAAOC,SAAP,MAAsB,qCAAtB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AAEA,IAAMC,UAAU,GAAG;AACfC,EAAAA,SAAS,EAAE;AACPC,IAAAA,EAAE,EAAE,UADG;AAEPC,IAAAA,KAAK,EAAE,MAFA;AAGPC,IAAAA,SAAS,EAAE,MAHJ;AAIPC,IAAAA,KAAK,EAAE,EAJA;AAKPC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,QAAQ,EAAE,IADJ;AAENC,MAAAA,KAAK,EAAE,IAFD;AAGNC,MAAAA,OAAO,EAAE;AAHH;AALH,GADI;AAYfC,EAAAA,UAAU,EAAE;AACRR,IAAAA,EAAE,EAAE,cADI;AAERC,IAAAA,KAAK,EAAE,UAFC;AAGRC,IAAAA,SAAS,EAAE,UAHH;AAIRC,IAAAA,KAAK,EAAE,EAJC;AAKRC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,QAAQ,EAAE,IADJ;AAENC,MAAAA,KAAK,EAAE,IAFD;AAGNC,MAAAA,OAAO,EAAE;AAHH;AALF;AAWZ;;;;;;;;;;;;AAvBe,CAAnB;;AAsCA,IAAME,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA,kBAEehB,QAAQ,CAACK,UAAU,CAACC,SAAZ,CAFvB;AAAA;AAAA,MAEbW,QAFa;AAAA,MAEHC,cAFG;;AAAA,mBAGuBlB,QAAQ,CAACK,UAAU,CAACU,UAAZ,CAH/B;AAAA;AAAA,MAGbI,YAHa;AAAA,MAGCC,kBAHD,kBAIpB;;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAQC,SAAR,EAAsB;AACvC;AACR;AACQ;AACA,QAAMC,QAAQ,mCAEPD,SAFO;AAGVb,MAAAA,KAAK,EAAEY,KAAK,CAACG,MAAN,CAAaf;AAHV,MAAd,CAJuC,CASvC;;;AACA,QAAGc,QAAQ,CAACb,QAAT,CAAkBC,QAAlB,KAA+B,IAAlC,EAAuC;AACnCc,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,QAAQ,CAAChB,KAArC;;AAEA,UAAGgB,QAAQ,CAACd,KAAT,CAAekB,MAAf,GAAwB,CAA3B,EAA6B;AACzBJ,QAAAA,QAAQ,CAACb,QAAT,CAAkBE,KAAlB,GAAyB,KAAzB;AACAW,QAAAA,QAAQ,CAACb,QAAT,CAAkBG,OAAlB,wCAA0DU,QAAQ,CAAChB,KAAnE;AAEH,OAJD,MAIM;AACFgB,QAAAA,QAAQ,CAACb,QAAT,CAAkBE,KAAlB,GAAyB,IAAzB;AACAW,QAAAA,QAAQ,CAACb,QAAT,CAAkBG,OAAlB;AACH;AAEJ;;AAID,QAAGS,SAAS,CAAChB,EAAV,KAAiB,UAApB,EAAgC;AAC5BW,MAAAA,cAAc,CAACM,QAAD,CAAd;AACH;;AAED,QAAID,SAAS,CAAChB,EAAV,KAAiB,cAArB,EAAoC;AAChCa,MAAAA,kBAAkB,CAACI,QAAD,CAAlB;AACH;AACD;;;;AAGH,GApCD,CANoB,CA4CpB;;;AAEA,MAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACP,KAAD,EAAW;AAChCA,IAAAA,KAAK,CAACQ,cAAN;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,kDAAZ;;AAEA,QAAIV,QAAQ,CAACN,QAAT,CAAkBE,KAAlB,KAA4B,IAA5B,IAAoCM,YAAY,CAACR,QAAb,CAAsBE,KAAtB,KAAgC,IAAxE,EAA8E;AAC1Ea,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAD0E,CAG1E;;AAEA,UAAMI,QAAQ,GAAG;AACbd,QAAAA,QAAQ,EAAEA,QADG;AAEbE,QAAAA,YAAY,EAAEA,YAFD,CAGb;;AAHa,OAAjB;AAOAjB,MAAAA,GAAG,CAAC8B,IAAJ,CAAS,gBAAT,EAA2BD,QAA3B,EAAqCE,IAArC,CAA0C,UAACC,MAAD,EAAU;AAC5CR,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBO,MAAtB;AACP,OAFD;AAGH;AACJ,GApBD;;AAsBA,sBACI,oBAAC,iBAAD;AAAmB,IAAA,SAAS,EAAC,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAGL,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,SAAS,EAAKZ,QADlB;AAEI,IAAA,QAAQ,EAAGI,YAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAKI,oBAAC,SAAD;AACI,IAAA,SAAS,EAAKF,YADlB;AAEI,IAAA,QAAQ,EAAGE,YAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAUI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAVJ,CADJ,CADJ;AAgBH,CApFD;;AAsFA,eAAeL,SAAf;AAEA,IAAMmB,iBAAiB,GAAGlC,MAAM,CAACmC,GAAV,mBAAvB","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\n/* Scripts ---------- */\nimport API from '../../../common/axios.js';\n\n/* Components -------- */\nimport FormGroup from '../../../common/Forms/FormGroup.jsx';\nimport Button from '../../../common/Forms/Button.jsx'\n\nconst formFields = {\n    nameField: {\n        id: 'userName',\n        label: 'Name',\n        inputType: 'text',\n        value: '',\n        validate: {\n            required: true,\n            valid: true,\n            message: '',\n        }\n    },\n    emailField: {\n        id: 'userPassword',\n        label: 'Password',\n        inputType: 'password',\n        value: '',\n        validate: {\n            required: true,\n            valid: true,\n            message: '',\n        }\n    },\n    /*messageField: {\n        id: 'userMessage',\n        label: 'Message',\n        inputType: 'textarea',\n        value: '',\n        validate: {\n            required: false,\n            valid: true,\n            message: '',\n        }\n    },*/\n}\n\n\n\nconst LoginForm = () => {\n\n    const [userName, userNameUpdate] = useState(formFields.nameField);\n    const [userPassword, userPasswordUpdate] = useState(formFields.emailField);\n    //const [userMessage, userMessageUpdate] = useState(formFields.messageField);\n    \n    const handleChange = (event, formField) => {\n        // console.log(event.target.value, formField);\n//grandpa\n        //update input\n        const newField = {\n            // clone of the formField\n            ...formField,\n            value: event.target.value,\n        }\n        //if() condition\n        if(newField.validate.required === true){\n            console.log('Validating: ', newField.label);\n\n            if(newField.value.length < 4){\n                newField.validate.valid =false;\n                newField.validate.message = `You forgot to fill out the ${newField.label} field`;\n\n            }else {\n                newField.validate.valid =true;\n                newField.validate.message = ``;\n            }\n\n        }\n\n\n\n        if(formField.id === 'userName') {\n            userNameUpdate(newField);\n        }\n\n        if (formField.id === 'userPassword'){\n            userPasswordUpdate(newField);\n        }\n        /*if (formField.id === 'userMessage'){\n            userMessageUpdate(newField);\n        }*/\n    }\n\n    //method to submit\n\n    const handleFormSubmit = (event) => {\n        event.preventDefault();\n        console.log('Captured Form Submit, we will take it from here.');\n\n        if( userName.validate.valid === true && userPassword.validate.valid === true ){\n            console.log('Valid Submitting form.');\n\n            // .. AJAX goes here: AKA AXIOS\n\n            const postData = {\n                userName: userName,\n                userPassword: userPassword,\n                //userMessage: userMessage,\n            }\n\n\n            API.post('/api/sendEmail', postData).then((result)=>{\n                    console.log('result', result);\n            });\n        }\n    }\n\n    return (\n        <ContactFormStyled className='ContactForm'>\n            <form onSubmit={ handleFormSubmit }>\n                <FormGroup \n                    formField = { userName } \n                    onChange={ handleChange }\n                />\n                <FormGroup \n                    formField = { userPassword } \n                    onChange={ handleChange }\n                />\n                \n                <Button type='submit'>Login</Button>\n            </form>\n        </ContactFormStyled>\n    );\n}\n\nexport default LoginForm;\n\nconst ContactFormStyled = styled.div`\n    \n`;"]},"metadata":{},"sourceType":"module"}